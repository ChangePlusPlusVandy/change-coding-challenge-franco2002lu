{"ast":null,"code":"var _jsxFileName = \"/Users/franco_lu/Documents/change-coding-challenge-franco2002lu/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Tweet from './Tweet';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.select = name => {\n      //if user selected the correct author, increment the correct answers by 1\n      //else, increment the incorrect answers by 1\n      if (this.state.tweets[this.state.currentIndex].author == name) {\n        this.setState({\n          correct: this.state.correct + 1,\n          currentIndex: this.state.currentIndex + 1\n        });\n      } else {\n        this.setState({\n          incorrect: this.state.incorrect + 1,\n          currentIndex: this.state.currentIndex + 1\n        });\n      }\n    };\n\n    this.state = {\n      tweets: [],\n      correct: 0,\n      incorrect: 0,\n      currentIndex: 0,\n      complete: false\n    };\n  }\n\n  async componentDidMount() {\n    // Get tweets for Elon Musk\n    let musk = await axios.get('https://cors-anywhere.herokuapp.com/https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=elonmusk&include_rts=false&exclude_replies=true&trim_user=true&count=10000&tweet_mode=extended ', {\n      headers: {\n        Authorization: `Bearer AAAAAAAAAAAAAAAAAAAAAGRVAwEAAAAARwfzHewGaupSy1mPkO8WfNrXi6k%3DpNJkyFccIZITDJEE6q6iuv4mLjmbGFNFhPbIhwkQOxkdRIfJd5`,\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(function (response) {\n      let array = response.data.map(tweet => {\n        //tweets which only include a link should be ignored\n        if (tweet.full_text.indexOf('https://t.co') != -1 && tweet.full_text.substring(0, tweet.full_text.indexOf('https://t.co')).length == 0) {\n          return null;\n        } // return an object with the tweet's text and author, where the text is formatted to include & instead of &amp; and exlude any links\n\n\n        return {\n          text: tweet.full_text.substring(0, tweet.full_text.indexOf('https://t.co') > 0 ? tweet.full_text.indexOf('https://t.co') : tweet.full_text.length).replace(/&amp;/g, '&'),\n          author: 'elon'\n        };\n      });\n      return array.filter(val => val != null);\n    }); // Get tweets from Kanye West\n\n    let west = await axios.get('https://cors-anywhere.herokuapp.com/https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=kanyewest&include_rts=false&exclude_replies=true&trim_user=true&count=10000&tweet_mode=extended ', {\n      headers: {\n        Authorization: `Bearer AAAAAAAAAAAAAAAAAAAAAGRVAwEAAAAARwfzHewGaupSy1mPkO8WfNrXi6k%3DpNJkyFccIZITDJEE6q6iuv4mLjmbGFNFhPbIhwkQOxkdRIfJd5`,\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    }).then(function (response) {\n      let array = response.data.map(tweet => {\n        //tweets which only include a link should be ignored\n        if (tweet.full_text.indexOf('https://t.co') != -1 && tweet.full_text.substring(0, tweet.full_text.indexOf('https://t.co')).length == 0) {\n          return null;\n        } // return an object with the tweet's text and author, where the text is formatted to include & instead of &amp; and exlude any links\n\n\n        return {\n          text: tweet.full_text.substring(0, tweet.full_text.indexOf('https://t.co') > 0 ? tweet.full_text.indexOf('https://t.co') : tweet.full_text.length).replace(/&amp;/g, '&'),\n          author: 'kanye'\n        };\n      });\n      return array.filter(val => val != null);\n    });\n    this.setState({\n      // set tweets state to the randomized concatenation of the two tweet arrays\n      tweets: musk.concat(west).sort(() => Math.random() - 0.5),\n      complete: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"Correct: \", this.state.correct)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"score-value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Incorrect: \", this.state.incorrect))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, \"Did Elon Musk or Kanye West write this Tweet?\"), this.state.complete ? /*#__PURE__*/React.createElement(Tweet, {\n      tweet: this.state.tweets[this.state.currentIndex],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button\",\n      id: \"kanye\",\n      onClick: () => this.select('kanye'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"Kanye West\")), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"button\",\n      id: \"elon\",\n      onClick: () => this.select('elon'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Elon Musk\")))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/franco_lu/Documents/change-coding-challenge-franco2002lu/src/App.js"],"names":["React","axios","Tweet","App","Component","constructor","select","name","state","tweets","currentIndex","author","setState","correct","incorrect","complete","componentDidMount","musk","get","headers","Authorization","then","response","array","data","map","tweet","full_text","indexOf","substring","length","text","replace","filter","val","west","concat","sort","Math","random","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport Tweet from './Tweet';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      tweets: [],\n      correct: 0,\n      incorrect: 0,\n      currentIndex: 0,\n      complete: false\n    }\n  }\n\n  async componentDidMount() {\n    // Get tweets for Elon Musk\n    let musk = await axios.get('https://cors-anywhere.herokuapp.com/https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=elonmusk&include_rts=false&exclude_replies=true&trim_user=true&count=10000&tweet_mode=extended ',\n        {headers: {\n          Authorization: `Bearer AAAAAAAAAAAAAAAAAAAAAGRVAwEAAAAARwfzHewGaupSy1mPkO8WfNrXi6k%3DpNJkyFccIZITDJEE6q6iuv4mLjmbGFNFhPbIhwkQOxkdRIfJd5`,\n            \"Access-Control-Allow-Origin\": \"*\"\n        }}\n        )\n        .then(function (response) {\n          let array = response.data.map((tweet) => {\n            //tweets which only include a link should be ignored\n            if(tweet.full_text.indexOf('https://t.co') != -1 && tweet.full_text.substring(0, tweet.full_text.indexOf('https://t.co')).length == 0){\n              return null\n            }\n            // return an object with the tweet's text and author, where the text is formatted to include & instead of &amp; and exlude any links\n            return {text: tweet.full_text.substring(0, tweet.full_text.indexOf('https://t.co') > 0 ? tweet.full_text.indexOf('https://t.co'): tweet.full_text.length).replace(/&amp;/g, '&'), author: 'elon'}\n          })\n          return array.filter((val) => val != null);\n        });\n    // Get tweets from Kanye West\n    let west = await axios.get('https://cors-anywhere.herokuapp.com/https://api.twitter.com/1.1/statuses/user_timeline.json?screen_name=kanyewest&include_rts=false&exclude_replies=true&trim_user=true&count=10000&tweet_mode=extended ',\n        {headers: {\n            Authorization: `Bearer AAAAAAAAAAAAAAAAAAAAAGRVAwEAAAAARwfzHewGaupSy1mPkO8WfNrXi6k%3DpNJkyFccIZITDJEE6q6iuv4mLjmbGFNFhPbIhwkQOxkdRIfJd5`,\n            \"Access-Control-Allow-Origin\": \"*\"\n          }}\n    )\n        .then(function (response) {\n          let array = response.data.map((tweet) => {\n            //tweets which only include a link should be ignored\n            if(tweet.full_text.indexOf('https://t.co') != -1 && tweet.full_text.substring(0, tweet.full_text.indexOf('https://t.co')).length == 0){\n              return null\n            }\n            // return an object with the tweet's text and author, where the text is formatted to include & instead of &amp; and exlude any links\n            return {text: tweet.full_text.substring(0, tweet.full_text.indexOf('https://t.co') > 0 ? tweet.full_text.indexOf('https://t.co'): tweet.full_text.length).replace(/&amp;/g, '&'), author: 'kanye'}\n          })\n          return array.filter((val) => val != null);\n        });\n    this.setState({\n      // set tweets state to the randomized concatenation of the two tweet arrays\n      tweets: musk.concat(west).sort(() => Math.random() - 0.5),\n      complete: true,\n    })\n  }\n\n  select = (name) => {\n    //if user selected the correct author, increment the correct answers by 1\n    //else, increment the incorrect answers by 1\n    if(this.state.tweets[this.state.currentIndex].author == name){\n      this.setState({\n        correct: this.state.correct + 1,\n        currentIndex: this.state.currentIndex + 1\n      })\n    } else {\n      this.setState({\n        incorrect: this.state.incorrect + 1,\n        currentIndex: this.state.currentIndex + 1\n      })\n    }\n  }\n\n  render(){\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className='row-container'>\n              <div className='score-value'>\n                <p>Correct: {this.state.correct}</p>\n              </div>\n              <div className='score-value'>\n                <p>Incorrect: {this.state.incorrect}</p>\n              </div>\n            </div>\n            <p>Did Elon Musk or Kanye West write this Tweet?</p>\n            {\n              this.state.complete\n                ? <Tweet tweet={this.state.tweets[this.state.currentIndex]}/>\n                : null\n            }\n            <div class='row-container'>\n              <button class='button' id='kanye' onClick={() => this.select('kanye')}>\n                <p>Kanye West</p>\n              </button>\n              <button class='button' id='elon' onClick={() => this.select('elon')}>\n                <p>Elon Musk</p>\n              </button>\n            </div>\n          </header>\n        </div>\n    );\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}